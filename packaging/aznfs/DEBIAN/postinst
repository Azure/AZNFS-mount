#!/bin/bash

# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------

# Exit on error.
set -e

# Set appropriate permissions.
chmod 0755 /opt/microsoft/aznfs/
chmod 0755 /usr/sbin/aznfswatchdog
chmod 0755 /opt/microsoft/aznfs/mountscript.sh
chmod 0755 /opt/microsoft/aznfs/aznfs_install.sh
chmod 0644 /opt/microsoft/aznfs/common.sh

# Set suid bit for mount.aznfs to allow mount for non-super user.
chmod 4755 /sbin/mount.aznfs

# Create data directory for holding mountmap and log file. 
mkdir -p /opt/microsoft/aznfs/data
chmod 0755 /opt/microsoft/aznfs/data

# Move the mountmap, aznfs.log and randbytes files to new path in case these files exists and package is being upgraded.
if [ -f /opt/microsoft/aznfs/mountmap ]; then
        chattr -f -i /opt/microsoft/aznfs/mountmap
        mv -vf /opt/microsoft/aznfs/mountmap /opt/microsoft/aznfs/data/
        chattr -f +i /opt/microsoft/aznfs/data/mountmap
fi

if [ -f /opt/microsoft/aznfs/aznfs.log ]; then
        mv -vf /opt/microsoft/aznfs/aznfs.log /opt/microsoft/aznfs/data/
fi

if [ -f /opt/microsoft/aznfs/randbytes ]; then
        chattr -f -i /opt/microsoft/aznfs/randbytes
        mv -vf /opt/microsoft/aznfs/randbytes /opt/microsoft/aznfs/data/
        chattr -f +i /opt/microsoft/aznfs/data/randbytes
fi

# Check if the config file exists; if not, create it.
if [ ! -f /opt/microsoft/aznfs/data/config ]; then
        # Create the config file and set default AUTO_UPDATE_AZNFS=true inside it.
        echo "AUTO_UPDATE_AZNFS=true" > /opt/microsoft/aznfs/data/config

        # Set the permissions for the config file.
        chmod 0644 /opt/microsoft/aznfs/data/config
fi
flag_file="/tmp/.update_in_progress_from_watchdog.flag"

# If it's an auto update triggered by aznfswatchdog, don't restart watchdog.
if [ ! -f "$flag_file" ]; then
        systemctl daemon-reload
        systemctl enable aznfswatchdog
        systemctl start aznfswatchdog
else
        # Clean up the update in progress flag file
        rm -f "$flag_file"
fi

