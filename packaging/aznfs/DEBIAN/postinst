#!/bin/bash

# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------

# Exit on error.
set -e

# Set appropriate permissions.
chmod 0755 /opt/microsoft/aznfs/
chmod 0755 /usr/sbin/aznfswatchdog
chmod 0755 /opt/microsoft/aznfs/mountscript.sh
chmod 0644 /opt/microsoft/aznfs/common.sh

# Set suid bit for mount.aznfs to allow mount for non-super user.
chmod 4755 /sbin/mount.aznfs

# Create a random byte source for deterministic shuffling of IP addresses.
set +e
if [ ! -s /opt/microsoft/aznfs/randbytes ]; then
	dd if=/dev/urandom of=/opt/microsoft/aznfs/randbytes bs=256 count=1
fi
if [ ! -s /opt/microsoft/aznfs/randbytes ]; then
	uuidgen > /opt/microsoft/aznfs/randbytes
fi
if [ ! -s /opt/microsoft/aznfs/randbytes ]; then
	date | md5sum | awk '{print $1}' > /opt/microsoft/aznfs/randbytes
fi
if [ ! -s /opt/microsoft/aznfs/randbytes ]; then
	date > /opt/microsoft/aznfs/randbytes
fi
chattr +i /opt/microsoft/aznfs/randbytes
set -e

# Start aznfswatchdog service.
init="$(ps -q 1 -o comm=)"
if [ "$init" != "systemd" ]; then
	#
	# For containers, we may have systemd installed but not booted yet.
	# Allow installation as long as systemd is installed.
	#
	echo "init is not systemd, checking if systemd is installed!"
	if [ ! -x /lib/systemd/systemd ]; then
		echo "systemd is not installed!"
		echo "Cannot install aznfs on a non-systemd system!"
		exit 1
	fi

	echo "OK, systemd installed, but not booted, continuing installation!"
	systemctl enable aznfswatchdog
else
	echo "System is booted with systemd, continuing installation!"
	systemctl daemon-reload
	systemctl enable aznfswatchdog
	systemctl start aznfswatchdog
fi
