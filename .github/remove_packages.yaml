parameters:
  - name: publish_artifacts
    displayName: 'Publish Artifacts to Linux Repos'
    type: boolean
    default: false

  - name: draft
    displayName: 'Post as Draft Release'
    type: boolean
    default: false

  - name: prerelease
    displayName: 'Post as PreRelease'
    type: boolean
    default: false

  - name: update_version
    displayName: 'Update Version'
    type: boolean
    default: false

  - name: versionName
    displayName: "Version Name"
    type: string
    default: "0.0.0"

# Do not trigger this pipeline automatically
trigger:
  - none

# Do not trigger this pipeline by pull requests
pr:
  - none

stages:
  - stage: RemoveSpecificPackageVersion
    jobs:
      - job: RemoveVersion
        timeoutInMinutes: 120
      
        pool:
          vmImage: 'ubuntu-20.04'

        steps:
          - checkout: none

          - task: PipAuthenticate@1
            inputs:
              artifactFeeds: 'One/aznfs'

          - script: pip install pmc-cli
            displayName: 'Install pmc-cli'

          - task: AzureCLI@2
            inputs:
              addSpnToEnvironment: true
              azureSubscription: 'Azure AZNFS'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |

                # Define the package name and target version
                PACKAGE_NAME="aznfs"
                TARGET_VERSION="${{ parameters.versionName }}"

                echo "Looking for .deb packages with version: $TARGET_VERSION"

                for id in $(pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" package deb list --name "$PACKAGE_NAME" | jq -r --arg ver "$TARGET_VERSION" '.results[] | select(.version == $ver) | .id'); do
                  echo "Found .deb package ID: $id (version $TARGET_VERSION)"
                  for repo in $(pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" repo list --package "$id" | jq -r '.results[].name'); do
                    echo "Removing .deb package from repo: $repo"
                    pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" repo package update --remove-packages "$id" "$repo"
                    echo "Republishing repo: $repo"
                    pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" repo publish "$repo"
                  done
                done

                echo "Looking for .rpm packages with version: $TARGET_VERSION"

                for id in $(pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" package rpm list --name "$PACKAGE_NAME" | jq -r --arg ver "$TARGET_VERSION" '.results[] | select(.version == $ver) | .id'); do
                  echo "Found .rpm package ID: $id (version $TARGET_VERSION)"
                  for repo in $(pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" repo list --package "$id" | jq -r '.results[].name'); do
                    echo "Removing .rpm package from repo: $repo"
                    pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" repo package update --remove-packages "$id" "$repo"
                    echo "Republishing repo: $repo"
                    pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" repo publish "$repo"
                  done
                done
